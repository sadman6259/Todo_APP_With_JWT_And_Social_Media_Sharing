{"ast":null,"code":"import { ToastrService } from 'ngx-toastr';\nimport { UserService } from './../../shared/user.service';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./../../shared/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/forms\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(service, router, toastr) {\n      this.service = service;\n      this.router = router;\n      this.toastr = toastr;\n      this.formModel = {\n        UserName: '',\n        Password: ''\n      };\n    }\n    ngOnInit() {\n      if (localStorage.getItem('token') != null) this.router.navigateByUrl('/home');\n    }\n    onSubmit(form) {\n      this.service.login(form.value).subscribe(res => {\n        localStorage.setItem('token', res.token);\n        this.router.navigateByUrl('/home');\n      }, err => {\n        if (err.status == 400) this.toastr.error('Incorrect username or password.', 'Authentication failed.');else console.log(err);\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[\"src\", \"/assets/img/single_user.png\", 1, \"mx-auto\", \"d-block\"], [\"autocomplete\", \"off\", 1, \"mb-4\", 3, \"submit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"name\", \"UserName\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"UserName\", \"ngModel\"], [\"type\", \"password\", \"name\", \"Password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"Password\", \"ngModel\"], [1, \"form-row\"], [1, \"form-group\", \"col-md-8\", \"offset-md-2\"], [\"type\", \"submit\", 1, \"btn\", \"btn-lg\", \"btn-block\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelement(0, \"img\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_1_listener() {\n          i0.ɵɵrestoreView(_r3);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(ctx.onSubmit(_r0));\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\");\n        i0.ɵɵtext(5, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.formModel.UserName = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n        i0.ɵɵtext(10, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.formModel.Password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 9)(15, \"button\", 10);\n        i0.ɵɵtext(16, \"Login\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.formModel.UserName);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.formModel.Password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}